
package com.osisoft.xml.services.pidataservice;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.5-hudson-$BUILD_NUMBER-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "IPITimeSeries", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IPITimeSeries {


    /**
     * 
     * @param requests
     * @return
     *     returns javax.xml.ws.Response<com.osisoft.xml.services.pidataservice.GetPIArchiveDataResponse>
     */
    @WebMethod(operationName = "GetPIArchiveData", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPIArchiveData")
    @RequestWrapper(localName = "GetPIArchiveData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIArchiveData")
    @ResponseWrapper(localName = "GetPIArchiveDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIArchiveDataResponse")
    public Response<GetPIArchiveDataResponse> getPIArchiveDataAsync(
        @WebParam(name = "requests", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfPIArcDataRequest requests);

    /**
     * 
     * @param requests
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetPIArchiveData", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPIArchiveData")
    @RequestWrapper(localName = "GetPIArchiveData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIArchiveData")
    @ResponseWrapper(localName = "GetPIArchiveDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIArchiveDataResponse")
    public Future<?> getPIArchiveDataAsync(
        @WebParam(name = "requests", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfPIArcDataRequest requests,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetPIArchiveDataResponse> asyncHandler);

    /**
     * 
     * @param requests
     * @return
     *     returns com.osisoft.xml.services.pidataservice.ArrayOfTimeSeries
     */
    @WebMethod(operationName = "GetPIArchiveData", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPIArchiveData")
    @WebResult(name = "GetPIArchiveDataResult", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
    @RequestWrapper(localName = "GetPIArchiveData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIArchiveData")
    @ResponseWrapper(localName = "GetPIArchiveDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIArchiveDataResponse")
    public ArrayOfTimeSeries getPIArchiveData(
        @WebParam(name = "requests", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfPIArcDataRequest requests);

    /**
     * 
     * @param evtFilter
     * @param maxWaitForUpdates
     * @param updateTicket
     * @return
     *     returns javax.xml.ws.Response<com.osisoft.xml.services.pidataservice.GetPIUpdatesResponse>
     */
    @WebMethod(operationName = "GetPIUpdates", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPIUpdates")
    @RequestWrapper(localName = "GetPIUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIUpdates")
    @ResponseWrapper(localName = "GetPIUpdatesResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIUpdatesResponse")
    public Response<GetPIUpdatesResponse> getPIUpdatesAsync(
        @WebParam(name = "updateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String updateTicket,
        @WebParam(name = "maxWaitForUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        int maxWaitForUpdates,
        @WebParam(name = "evtFilter", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        UpdateFilterType evtFilter);

    /**
     * 
     * @param evtFilter
     * @param maxWaitForUpdates
     * @param updateTicket
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetPIUpdates", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPIUpdates")
    @RequestWrapper(localName = "GetPIUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIUpdates")
    @ResponseWrapper(localName = "GetPIUpdatesResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIUpdatesResponse")
    public Future<?> getPIUpdatesAsync(
        @WebParam(name = "updateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String updateTicket,
        @WebParam(name = "maxWaitForUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        int maxWaitForUpdates,
        @WebParam(name = "evtFilter", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        UpdateFilterType evtFilter,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetPIUpdatesResponse> asyncHandler);

    /**
     * 
     * @param evtFilter
     * @param maxWaitForUpdates
     * @param updateTicket
     * @return
     *     returns com.osisoft.xml.services.pidataservice.ArrayOfTimeSeriesUpdates
     */
    @WebMethod(operationName = "GetPIUpdates", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPIUpdates")
    @WebResult(name = "GetPIUpdatesResult", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
    @RequestWrapper(localName = "GetPIUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIUpdates")
    @ResponseWrapper(localName = "GetPIUpdatesResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPIUpdatesResponse")
    public ArrayOfTimeSeriesUpdates getPIUpdates(
        @WebParam(name = "updateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String updateTicket,
        @WebParam(name = "maxWaitForUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        int maxWaitForUpdates,
        @WebParam(name = "evtFilter", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        UpdateFilterType evtFilter);

    /**
     * 
     * @param paths
     * @param expiration
     * @return
     *     returns javax.xml.ws.Response<com.osisoft.xml.services.pidataservice.SignUpForPIUpdatesResponse>
     */
    @WebMethod(operationName = "SignUpForPIUpdates", action = "http://xml.osisoft.com/services/IPITimeSeries/SignUpForPIUpdates")
    @RequestWrapper(localName = "SignUpForPIUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.SignUpForPIUpdates")
    @ResponseWrapper(localName = "SignUpForPIUpdatesResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.SignUpForPIUpdatesResponse")
    public Response<SignUpForPIUpdatesResponse> signUpForPIUpdatesAsync(
        @WebParam(name = "paths", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfString paths,
        @WebParam(name = "expiration", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        int expiration);

    /**
     * 
     * @param paths
     * @param expiration
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "SignUpForPIUpdates", action = "http://xml.osisoft.com/services/IPITimeSeries/SignUpForPIUpdates")
    @RequestWrapper(localName = "SignUpForPIUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.SignUpForPIUpdates")
    @ResponseWrapper(localName = "SignUpForPIUpdatesResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.SignUpForPIUpdatesResponse")
    public Future<?> signUpForPIUpdatesAsync(
        @WebParam(name = "paths", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfString paths,
        @WebParam(name = "expiration", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        int expiration,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<SignUpForPIUpdatesResponse> asyncHandler);

    /**
     * 
     * @param paths
     * @param expiration
     * @return
     *     returns com.osisoft.xml.services.pidataservice.SignUpResults
     */
    @WebMethod(operationName = "SignUpForPIUpdates", action = "http://xml.osisoft.com/services/IPITimeSeries/SignUpForPIUpdates")
    @WebResult(name = "SignUpForPIUpdatesResult", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
    @RequestWrapper(localName = "SignUpForPIUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.SignUpForPIUpdates")
    @ResponseWrapper(localName = "SignUpForPIUpdatesResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.SignUpForPIUpdatesResponse")
    public SignUpResults signUpForPIUpdates(
        @WebParam(name = "paths", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfString paths,
        @WebParam(name = "expiration", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        int expiration);

    /**
     * 
     * @param updateTicket
     * @return
     *     returns javax.xml.ws.Response<com.osisoft.xml.services.pidataservice.CancelSignUpForPIUpdatesResponse>
     */
    @WebMethod(operationName = "CancelSignUpForPIUpdates", action = "http://xml.osisoft.com/services/IPITimeSeries/CancelSignUpForPIUpdates")
    @RequestWrapper(localName = "CancelSignUpForPIUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.CancelSignUpForPIUpdates")
    @ResponseWrapper(localName = "CancelSignUpForPIUpdatesResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.CancelSignUpForPIUpdatesResponse")
    public Response<CancelSignUpForPIUpdatesResponse> cancelSignUpForPIUpdatesAsync(
        @WebParam(name = "updateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String updateTicket);

    /**
     * 
     * @param updateTicket
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "CancelSignUpForPIUpdates", action = "http://xml.osisoft.com/services/IPITimeSeries/CancelSignUpForPIUpdates")
    @RequestWrapper(localName = "CancelSignUpForPIUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.CancelSignUpForPIUpdates")
    @ResponseWrapper(localName = "CancelSignUpForPIUpdatesResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.CancelSignUpForPIUpdatesResponse")
    public Future<?> cancelSignUpForPIUpdatesAsync(
        @WebParam(name = "updateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String updateTicket,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<CancelSignUpForPIUpdatesResponse> asyncHandler);

    /**
     * 
     * @param updateTicket
     */
    @WebMethod(operationName = "CancelSignUpForPIUpdates", action = "http://xml.osisoft.com/services/IPITimeSeries/CancelSignUpForPIUpdates")
    @RequestWrapper(localName = "CancelSignUpForPIUpdates", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.CancelSignUpForPIUpdates")
    @ResponseWrapper(localName = "CancelSignUpForPIUpdatesResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.CancelSignUpForPIUpdatesResponse")
    public void cancelSignUpForPIUpdates(
        @WebParam(name = "updateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String updateTicket);

    /**
     * 
     * @param updateTicket
     * @return
     *     returns javax.xml.ws.Response<com.osisoft.xml.services.pidataservice.ListPathsByUpdateTicketResponse>
     */
    @WebMethod(operationName = "ListPathsByUpdateTicket", action = "http://xml.osisoft.com/services/IPITimeSeries/ListPaths")
    @RequestWrapper(localName = "ListPathsByUpdateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.ListPathsByUpdateTicket")
    @ResponseWrapper(localName = "ListPathsByUpdateTicketResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.ListPathsByUpdateTicketResponse")
    public Response<ListPathsByUpdateTicketResponse> listPathsByUpdateTicketAsync(
        @WebParam(name = "updateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String updateTicket);

    /**
     * 
     * @param updateTicket
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "ListPathsByUpdateTicket", action = "http://xml.osisoft.com/services/IPITimeSeries/ListPaths")
    @RequestWrapper(localName = "ListPathsByUpdateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.ListPathsByUpdateTicket")
    @ResponseWrapper(localName = "ListPathsByUpdateTicketResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.ListPathsByUpdateTicketResponse")
    public Future<?> listPathsByUpdateTicketAsync(
        @WebParam(name = "updateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String updateTicket,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ListPathsByUpdateTicketResponse> asyncHandler);

    /**
     * 
     * @param updateTicket
     * @return
     *     returns com.osisoft.xml.services.pidataservice.ArrayOfString
     */
    @WebMethod(operationName = "ListPathsByUpdateTicket", action = "http://xml.osisoft.com/services/IPITimeSeries/ListPaths")
    @WebResult(name = "ListPathsByUpdateTicketResult", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
    @RequestWrapper(localName = "ListPathsByUpdateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.ListPathsByUpdateTicket")
    @ResponseWrapper(localName = "ListPathsByUpdateTicketResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.ListPathsByUpdateTicketResponse")
    public ArrayOfString listPathsByUpdateTicket(
        @WebParam(name = "updateTicket", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String updateTicket);

    /**
     * 
     * @param paths
     * @return
     *     returns javax.xml.ws.Response<com.osisoft.xml.services.pidataservice.GetPISnapshotDataResponse>
     */
    @WebMethod(operationName = "GetPISnapshotData", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPISnapshotData")
    @RequestWrapper(localName = "GetPISnapshotData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISnapshotData")
    @ResponseWrapper(localName = "GetPISnapshotDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISnapshotDataResponse")
    public Response<GetPISnapshotDataResponse> getPISnapshotDataAsync(
        @WebParam(name = "paths", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfString paths);

    /**
     * 
     * @param paths
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetPISnapshotData", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPISnapshotData")
    @RequestWrapper(localName = "GetPISnapshotData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISnapshotData")
    @ResponseWrapper(localName = "GetPISnapshotDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISnapshotDataResponse")
    public Future<?> getPISnapshotDataAsync(
        @WebParam(name = "paths", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfString paths,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetPISnapshotDataResponse> asyncHandler);

    /**
     * 
     * @param paths
     * @return
     *     returns com.osisoft.xml.services.pidataservice.ArrayOfTimeSeries
     */
    @WebMethod(operationName = "GetPISnapshotData", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPISnapshotData")
    @WebResult(name = "GetPISnapshotDataResult", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
    @RequestWrapper(localName = "GetPISnapshotData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISnapshotData")
    @ResponseWrapper(localName = "GetPISnapshotDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISnapshotDataResponse")
    public ArrayOfTimeSeries getPISnapshotData(
        @WebParam(name = "paths", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfString paths);

    /**
     * 
     * @param requests
     * @return
     *     returns javax.xml.ws.Response<com.osisoft.xml.services.pidataservice.GetPISummaryDataResponse>
     */
    @WebMethod(operationName = "GetPISummaryData", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPISummaryData")
    @RequestWrapper(localName = "GetPISummaryData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISummaryData")
    @ResponseWrapper(localName = "GetPISummaryDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISummaryDataResponse")
    public Response<GetPISummaryDataResponse> getPISummaryDataAsync(
        @WebParam(name = "requests", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfPISummaryDataRequest requests);

    /**
     * 
     * @param requests
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetPISummaryData", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPISummaryData")
    @RequestWrapper(localName = "GetPISummaryData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISummaryData")
    @ResponseWrapper(localName = "GetPISummaryDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISummaryDataResponse")
    public Future<?> getPISummaryDataAsync(
        @WebParam(name = "requests", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfPISummaryDataRequest requests,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetPISummaryDataResponse> asyncHandler);

    /**
     * 
     * @param requests
     * @return
     *     returns com.osisoft.xml.services.pidataservice.ArrayOfTimeSeries
     */
    @WebMethod(operationName = "GetPISummaryData", action = "http://xml.osisoft.com/services/IPITimeSeries/GetPISummaryData")
    @WebResult(name = "GetPISummaryDataResult", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
    @RequestWrapper(localName = "GetPISummaryData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISummaryData")
    @ResponseWrapper(localName = "GetPISummaryDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetPISummaryDataResponse")
    public ArrayOfTimeSeries getPISummaryData(
        @WebParam(name = "requests", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfPISummaryDataRequest requests);

    /**
     * 
     * @param events
     * @param duplicateSwitch
     * @return
     *     returns javax.xml.ws.Response<com.osisoft.xml.services.pidataservice.InsertPIDataResponse>
     */
    @WebMethod(operationName = "InsertPIData", action = "http://xml.osisoft.com/services/IPITimeSeries/InsertPIData")
    @RequestWrapper(localName = "InsertPIData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.InsertPIData")
    @ResponseWrapper(localName = "InsertPIDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.InsertPIDataResponse")
    public Response<InsertPIDataResponse> insertPIDataAsync(
        @WebParam(name = "events", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfTimeSeries events,
        @WebParam(name = "duplicateSwitch", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String duplicateSwitch);

    /**
     * 
     * @param events
     * @param asyncHandler
     * @param duplicateSwitch
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "InsertPIData", action = "http://xml.osisoft.com/services/IPITimeSeries/InsertPIData")
    @RequestWrapper(localName = "InsertPIData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.InsertPIData")
    @ResponseWrapper(localName = "InsertPIDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.InsertPIDataResponse")
    public Future<?> insertPIDataAsync(
        @WebParam(name = "events", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfTimeSeries events,
        @WebParam(name = "duplicateSwitch", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String duplicateSwitch,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<InsertPIDataResponse> asyncHandler);

    /**
     * 
     * @param events
     * @param duplicateSwitch
     * @return
     *     returns com.osisoft.xml.services.pidataservice.TimeSeries
     */
    @WebMethod(operationName = "InsertPIData", action = "http://xml.osisoft.com/services/IPITimeSeries/InsertPIData")
    @WebResult(name = "InsertPIDataResult", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
    @RequestWrapper(localName = "InsertPIData", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.InsertPIData")
    @ResponseWrapper(localName = "InsertPIDataResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.InsertPIDataResponse")
    public TimeSeries insertPIData(
        @WebParam(name = "events", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        ArrayOfTimeSeries events,
        @WebParam(name = "duplicateSwitch", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
        String duplicateSwitch);

    /**
     * 
     * @return
     *     returns javax.xml.ws.Response<com.osisoft.xml.services.pidataservice.GetProductVersionResponse>
     */
    @WebMethod(operationName = "GetProductVersion", action = "http://xml.osisoft.com/services/IPITimeSeries/GetProductVersion")
    @RequestWrapper(localName = "GetProductVersion", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetProductVersion")
    @ResponseWrapper(localName = "GetProductVersionResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetProductVersionResponse")
    public Response<GetProductVersionResponse> getProductVersionAsync();

    /**
     * 
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetProductVersion", action = "http://xml.osisoft.com/services/IPITimeSeries/GetProductVersion")
    @RequestWrapper(localName = "GetProductVersion", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetProductVersion")
    @ResponseWrapper(localName = "GetProductVersionResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetProductVersionResponse")
    public Future<?> getProductVersionAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetProductVersionResponse> asyncHandler);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetProductVersion", action = "http://xml.osisoft.com/services/IPITimeSeries/GetProductVersion")
    @WebResult(name = "GetProductVersionResult", targetNamespace = "http://xml.osisoft.com/services/PIDataService")
    @RequestWrapper(localName = "GetProductVersion", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetProductVersion")
    @ResponseWrapper(localName = "GetProductVersionResponse", targetNamespace = "http://xml.osisoft.com/services/PIDataService", className = "com.osisoft.xml.services.pidataservice.GetProductVersionResponse")
    public String getProductVersion();

}
